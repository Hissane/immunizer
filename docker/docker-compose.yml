version: '3.7'

services:
  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/cluster
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 29092:29092
    volumes:
      - kafka_data:/cluster
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    depends_on: 
      - zookeeper
  microservices-spark-master:
    build: https://raw.githubusercontent.com/oiraqi/immunizer-monitor/master/docker/Dockerfile 
    container_name: microservices-spark-master
    tty: true
    ports:
      - "8080:8080"
      - "7077:7077"
    depends_on:
      - kafka
  spark-worker-1:
    image: bde2020/spark-worker:2.4.5-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - microservices-spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://microservices-spark-master:7077"
  ignite:
    image: apacheignite/ignite
    container_name: ignite
    environment:
      - IGNITE_QUIET=false
    ports:
      - 11211:11211
      - 47100:47100
      - 47500:47500
      - 49112:49112
  immunizer-agents:
    build: https://raw.githubusercontent.com/oiraqi/immunizer-sensor/master/docker/Dockerfile
    container_name: immunizer-microagents
    ports:
      - 8443:8443
    tty: true
    depends_on:
      - kafka
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
